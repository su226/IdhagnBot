"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class BasicRenderSpec(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPACITY_FIELD_NUMBER: builtins.int
    opacity: builtins.float
    """"""
    def __init__(
        self,
        *,
        opacity: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["opacity", b"opacity"]) -> None: ...

global___BasicRenderSpec = BasicRenderSpec

@typing_extensions.final
class ColorConfig(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IS_DARK_MODE_AWARE_FIELD_NUMBER: builtins.int
    DAY_FIELD_NUMBER: builtins.int
    NIGHT_FIELD_NUMBER: builtins.int
    is_dark_mode_aware: builtins.bool
    """"""
    @property
    def day(self) -> global___ColorSpec:
        """"""
    @property
    def night(self) -> global___ColorSpec:
        """"""
    def __init__(
        self,
        *,
        is_dark_mode_aware: builtins.bool = ...,
        day: global___ColorSpec | None = ...,
        night: global___ColorSpec | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["day", b"day", "night", b"night"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["day", b"day", "is_dark_mode_aware", b"is_dark_mode_aware", "night", b"night"]) -> None: ...

global___ColorConfig = ColorConfig

@typing_extensions.final
class ColorSpec(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARGB_FIELD_NUMBER: builtins.int
    argb: builtins.str
    """"""
    def __init__(
        self,
        *,
        argb: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["argb", b"argb"]) -> None: ...

global___ColorSpec = ColorSpec

@typing_extensions.final
class LayerGeneralSpec(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POS_SPEC_FIELD_NUMBER: builtins.int
    SIZE_SPEC_FIELD_NUMBER: builtins.int
    RENDER_SPEC_FIELD_NUMBER: builtins.int
    @property
    def pos_spec(self) -> global___PositionSpec:
        """"""
    @property
    def size_spec(self) -> global___SizeSpec:
        """"""
    @property
    def render_spec(self) -> global___BasicRenderSpec:
        """"""
    def __init__(
        self,
        *,
        pos_spec: global___PositionSpec | None = ...,
        size_spec: global___SizeSpec | None = ...,
        render_spec: global___BasicRenderSpec | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pos_spec", b"pos_spec", "render_spec", b"render_spec", "size_spec", b"size_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pos_spec", b"pos_spec", "render_spec", b"render_spec", "size_spec", b"size_spec"]) -> None: ...

global___LayerGeneralSpec = LayerGeneralSpec

@typing_extensions.final
class MaskProperty(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENERAL_SPEC_FIELD_NUMBER: builtins.int
    MASK_SRC_FIELD_NUMBER: builtins.int
    @property
    def general_spec(self) -> global___LayerGeneralSpec:
        """"""
    @property
    def mask_src(self) -> global___ResourceSource:
        """"""
    def __init__(
        self,
        *,
        general_spec: global___LayerGeneralSpec | None = ...,
        mask_src: global___ResourceSource | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["general_spec", b"general_spec", "mask_src", b"mask_src"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["general_spec", b"general_spec", "mask_src", b"mask_src"]) -> None: ...

global___MaskProperty = MaskProperty

@typing_extensions.final
class NativeDrawRes(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DRAW_TYPE_FIELD_NUMBER: builtins.int
    FILL_MODE_FIELD_NUMBER: builtins.int
    COLOR_CONFIG_FIELD_NUMBER: builtins.int
    EDGE_WEIGHT_FIELD_NUMBER: builtins.int
    draw_type: builtins.int
    """"""
    fill_mode: builtins.int
    """"""
    @property
    def color_config(self) -> global___ColorConfig:
        """"""
    edge_weight: builtins.float
    """"""
    def __init__(
        self,
        *,
        draw_type: builtins.int = ...,
        fill_mode: builtins.int = ...,
        color_config: global___ColorConfig | None = ...,
        edge_weight: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["color_config", b"color_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["color_config", b"color_config", "draw_type", b"draw_type", "edge_weight", b"edge_weight", "fill_mode", b"fill_mode"]) -> None: ...

global___NativeDrawRes = NativeDrawRes

@typing_extensions.final
class PositionSpec(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COORDINATE_POS_FIELD_NUMBER: builtins.int
    AXIS_X_FIELD_NUMBER: builtins.int
    AXIS_Y_FIELD_NUMBER: builtins.int
    coordinate_pos: builtins.int
    """"""
    axis_x: builtins.float
    """"""
    axis_y: builtins.float
    """"""
    def __init__(
        self,
        *,
        coordinate_pos: builtins.int = ...,
        axis_x: builtins.float = ...,
        axis_y: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["axis_x", b"axis_x", "axis_y", b"axis_y", "coordinate_pos", b"coordinate_pos"]) -> None: ...

global___PositionSpec = PositionSpec

@typing_extensions.final
class RemoteRes(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    URL_FIELD_NUMBER: builtins.int
    BFS_STYLE_FIELD_NUMBER: builtins.int
    url: builtins.str
    """"""
    bfs_style: builtins.str
    """"""
    def __init__(
        self,
        *,
        url: builtins.str = ...,
        bfs_style: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bfs_style", b"bfs_style", "url", b"url"]) -> None: ...

global___RemoteRes = RemoteRes

@typing_extensions.final
class ResourceSource(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _LocalRes:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LocalResEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ResourceSource._LocalRes.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LOCAL_RES_INVALID: ResourceSource._LocalRes.ValueType  # 0
        LOCAL_RES_ICON_VIP: ResourceSource._LocalRes.ValueType  # 1
        LOCAL_RES_ICON_SMALL_VIP: ResourceSource._LocalRes.ValueType  # 2
        LOCAL_RES_ICON_PERSONAL_VERIFY: ResourceSource._LocalRes.ValueType  # 3
        LOCAL_RES_ICON_ENTERPRISE_VERIFY: ResourceSource._LocalRes.ValueType  # 4
        LOCAL_RES_ICON_NFT_MAINLAND: ResourceSource._LocalRes.ValueType  # 5
        LOCAL_RES_DEFAULT_AVATAR: ResourceSource._LocalRes.ValueType  # 6

    class LocalRes(_LocalRes, metaclass=_LocalResEnumTypeWrapper):
        """"""

    LOCAL_RES_INVALID: ResourceSource.LocalRes.ValueType  # 0
    LOCAL_RES_ICON_VIP: ResourceSource.LocalRes.ValueType  # 1
    LOCAL_RES_ICON_SMALL_VIP: ResourceSource.LocalRes.ValueType  # 2
    LOCAL_RES_ICON_PERSONAL_VERIFY: ResourceSource.LocalRes.ValueType  # 3
    LOCAL_RES_ICON_ENTERPRISE_VERIFY: ResourceSource.LocalRes.ValueType  # 4
    LOCAL_RES_ICON_NFT_MAINLAND: ResourceSource.LocalRes.ValueType  # 5
    LOCAL_RES_DEFAULT_AVATAR: ResourceSource.LocalRes.ValueType  # 6

    SRC_TYPE_FIELD_NUMBER: builtins.int
    PLACEHOLDER_FIELD_NUMBER: builtins.int
    REMOTE_FIELD_NUMBER: builtins.int
    LOCAL_FIELD_NUMBER: builtins.int
    DRAW_FIELD_NUMBER: builtins.int
    src_type: builtins.int
    """"""
    placeholder: builtins.int
    """"""
    @property
    def remote(self) -> global___RemoteRes:
        """"""
    local: global___ResourceSource.LocalRes.ValueType
    """"""
    @property
    def draw(self) -> global___NativeDrawRes:
        """"""
    def __init__(
        self,
        *,
        src_type: builtins.int = ...,
        placeholder: builtins.int = ...,
        remote: global___RemoteRes | None = ...,
        local: global___ResourceSource.LocalRes.ValueType = ...,
        draw: global___NativeDrawRes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["draw", b"draw", "local", b"local", "remote", b"remote", "res", b"res"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["draw", b"draw", "local", b"local", "placeholder", b"placeholder", "remote", b"remote", "res", b"res", "src_type", b"src_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["res", b"res"]) -> typing_extensions.Literal["remote", "local", "draw"] | None: ...

global___ResourceSource = ResourceSource

@typing_extensions.final
class SizeSpec(google.protobuf.message.Message):
    """"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    width: builtins.float
    """"""
    height: builtins.float
    """"""
    def __init__(
        self,
        *,
        width: builtins.float = ...,
        height: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["height", b"height", "width", b"width"]) -> None: ...

global___SizeSpec = SizeSpec
